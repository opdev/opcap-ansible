---
- name: Gather subscription data
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Only gather date_time to facts
      ansible.builtin.setup:
        filter:
          - ansible_date_time
    - name: Set current date to stats
      ansible.builtin.set_stats:
        data:
          current_date: "{{ ansible_date_time.date }}"
    - name: Get K8S cluster info
      kubernetes.core.k8s_cluster_info:
      register: ocp_version
      no_log: true
    - name: Save cluster version
      ansible.builtin.set_stats:
        data:
          k8s_cluster_version: "{{ ocp_version.version.server.kubernetes }}"
    - name: Get OpenShift cluster info
      kubernetes.core.k8s_info:
        api_version: "config.openshift.io/v1"
        kind: ClusterVersion
        name: version
      register: openshift_cluster_version
      failed_when: >
        (openshift_cluster_version.resources[0] is not defined) or
        (openshift_cluster_version.resources[0] == "")
    - name: Save OpenShift cluster info
      ansible.builtin.set_stats:
        data:
          openshift_cluster_version: "{{ openshift_cluster_version.resources[0].status.history[0].version }}"
    - name: Get cluster base URL
      kubernetes.core.k8s_info:
        api_version: config.openshift.io/v1
        kind: DNS
        name: cluster
      register: cluster_dns
    - name: Set cluster_base_url fact
      ansible.builtin.set_fact:
        cluster_base_url: "{{ cluster_dns.resources[0].spec.baseDomain }}"
    - name: Get PackageManifests
      kubernetes.core.k8s_info:
        api_version: "packages.operators.coreos.com/v1"
        kind: PackageManifest
      register: package_manifest_list
      no_log: true
    - name: Filter package_manifest_list
      ansible.builtin.set_fact:
        manifest_list: "{{ package_manifest_list.resources |
                           selectattr('status.packageName', 'in', packages | list) }}"
      when: packages | default([]) | length > 0
    - name: Make manifest_list when no packages defined
      ansible.builtin.set_fact:
        manifest_list: "{{ package_manifest_list.resources | list }}"
      when: packages | default([]) | length == 0
    - name: Get subscription data from OpenShift
      ansible.builtin.set_fact:
        openshift_sub_info: "{{ manifest_list |
                                map(attribute='status') |
                                selectattr('catalogSource', 'in', '[' + catalog_source + ']') |
                                list }}"
    - name: Set fact for fips-assessment repo path
      ansible.builtin.set_fact:
        fips_repo: "{{ fips_repo_base_path | default('/tmp') }}/fips-assessments/"
    - name: Git checkout fips-assessment tests
      ansible.builtin.git:
        repo: "{{ fips_repo_url | default('https://github.com/opdev/fips-assessments') }}"
        version: "{{ fips_repo_branch | default('main') }}"
        dest: "{{ fips_repo }}"
        update: "{{ fips_git_update | default(true) }}"
      when: fips_assessment | default(false)
    - name: Execute operator_install.yml for each openshift_sub_info
      ansible.builtin.include_tasks: operator_install.yml
      loop: "{{ openshift_sub_info }}"
      loop_control:
        loop_var: manifest_data
    - name: Delete temporary files from fips-assessment
      ansible.builtin.file:
        path: "{{ fips_repo }}"
        state: absent
      when:
        - fips_assessment | default(false)
        - fips_git_cleanup | default(false)
