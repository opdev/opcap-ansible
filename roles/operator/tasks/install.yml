---
- name: Create operator group in kubernetes.core.k8s
  kubernetes.core.k8s:
    state: present
    namespace: "{{ operator_install_namespace }}"
    resource_definition: "{{ lookup('template', 'operator-group.yml.j2') }}"
- name: Create Subscription for operator
  kubernetes.core.k8s:
    state: present
    namespace: "{{ operator_install_namespace }}"
    resource_definition: "{{ lookup('template', 'subscription.yml.j2') }}"
- name: Get Current CSV
  kubernetes.core.k8s_info:
    namespace: "{{ operator_install_namespace }}"
    name: "{{ [package_manifest.name, package_name, operator_install_mode | lower, 'subscription'] | join('-') }}"
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
  register: subscription
  until: subscription.resources[0].status.currentCSV is defined
  retries: 10
  delay: 10
- name: Get CSV and report
  block:
    - name: Get CSV Completed
      kubernetes.core.k8s_info:
        namespace: "{{ operator_install_namespace }}"
        name: "{{ subscription.resources[0].status.currentCSV }}"
        api_version: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
      register: result
      until: result.resources[0] is defined and result.resources[0].status.phase == "Succeeded"
      retries: 30
      delay: 10
      failed_when: result.resources is not defined or result.resources | length == 0 or result.resources[0].status.phase != "Succeeded"
  rescue:
    - name: Set timeout
      ansible.builtin.set_fact:
        operator_timeout: true
- name: Create stat
  ansible.builtin.set_fact:
    package:
      name: "{{ package_name }}"
      channel: "{{ package_manifest.name }}"
      install_mode: "{{ operator_install_mode }}"
      result: "{{ (operator_timeout | default(false)) | ternary('timeout', result.resources[0].status.phase | default('')) }}"
      message: "{{ result.resources[0].status.message | default('') }}"
      reason: "{{ result.resources[0].status.reason | default('') }}"
- name: Push stats
  ansible.builtin.set_stats:
    data:
      operators: "{{ [package] }}"
